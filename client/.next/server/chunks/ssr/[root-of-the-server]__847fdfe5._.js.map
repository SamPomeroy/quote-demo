{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 103, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/components/dashboard/Dashboard.tsx"],"sourcesContent":["'use client';\r\n\r\n\r\n\r\nimport { useEffect, useState } from 'react';\r\nimport { createClient } from '@supabase/supabase-js';\r\nimport { Search, FileText, Bell, Settings, LogOut, Home, Mail, Info, Shield } from 'lucide-react';\r\n// import JobModal from '../JobModal';\r\nimport type { AuthUser } from '../../types/auth';\r\n// import { getUserServer } from '@supabase/auth-helpers-nextjs';\r\n\r\n\r\n// Add a minimal AuthUser type for demonstration; replace with your actual type if needed\r\n\r\nconst supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL as string | undefined;\r\nconst supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string | undefined;\r\n\r\nif (!supabaseUrl || !supabaseAnonKey) {\r\n  throw new Error('Supabase environment variables are not set');\r\n}\r\nconst supabase = createClient(supabaseUrl, supabaseAnonKey);\r\nexport default function Dashboard({ user }: { user: AuthUser }) {\r\n  const [activeTab, setActiveTab] = useState('dashboard');\r\n  const [jobAlerts, setJobAlerts] = useState<Job[]>([]);\r\n  const [scrapingStatus, setScrapingStatus] = useState<{ active: boolean; lastRun: string | null }>({\r\n    active: false,\r\n    lastRun: null\r\n  });\r\n  const [selectedJob, setSelectedJob] = useState<Job | null>(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const pageSize = 10;\r\n\r\n  useEffect(() => {\r\n    const fetchJobs = async (page: number) => {\r\n      const from = (page - 1) * pageSize;\r\n      const to = from + pageSize - 1;\r\n\r\n      const { data, error } = await supabase\r\n        .from('jobs')\r\n        .select('*')\r\n        .order('date', { ascending: false })\r\n        .range(from, to);\r\n\r\n      if (error) {\r\n        console.error('Error fetching jobs:', error);\r\n      } else {\r\n        setJobAlerts(data || []);\r\n        setScrapingStatus({\r\n          active: true,\r\n          lastRun: new Date().toLocaleString()\r\n        });\r\n      }\r\n    };\r\n\r\n    fetchJobs(currentPage);\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    document.body.style.overflow = selectedJob ? 'hidden' : '';\r\n  }, [selectedJob]);\r\n\r\n  // Simple JobModal component (you can extract this to a separate file)\r\n  const JobModal = ({ job, onClose }: { job: Job; onClose: () => void }) => (\r\n    <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center p-4 z-50\">\r\n      <div className=\"bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto\">\r\n        <div className=\"p-6\">\r\n          <div className=\"flex justify-between items-start mb-4\">\r\n            <h2 className=\"text-xl font-bold text-gray-900\">{job.title}</h2>\r\n            <button\r\n              onClick={onClose}\r\n              className=\"text-gray-400 hover:text-gray-600\"\r\n            >\r\n              ✕\r\n            </button>\r\n          </div>\r\n          <div className=\"space-y-3\">\r\n            <p><strong>Company:</strong> {job.company || 'N/A'}</p>\r\n            <p><strong>Location:</strong> {job.job_location || 'N/A'}</p>\r\n            <p><strong>Salary:</strong> {job.salary || 'Not specified'}</p>\r\n            <p><strong>Site:</strong> {job.site}</p>\r\n            <p><strong>Date:</strong> {job.date}</p>\r\n            <p><strong>Status:</strong> {job.applied ? 'Applied' : 'Pending'}</p>\r\n            {job.job_description && (\r\n              <div>\r\n                <strong>Description:</strong>\r\n                <p className=\"mt-2 text-sm text-gray-600\">{job.job_description}</p>\r\n              </div>\r\n            )}\r\n            {job.url && (\r\n              <a\r\n                href={job.url}\r\n                target=\"_blank\"\r\n                rel=\"noopener noreferrer\"\r\n                className=\"inline-block bg-blue-600 text-white px-4 py-2 rounded hover:bg-blue-700\"\r\n              >\r\n                View Job Posting\r\n              </a>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-6\">\r\n      {/* Tab Navigation */}\r\n      <div className=\"flex space-x-6 border-b pb-2\">\r\n        {[\r\n          { id: 'dashboard', label: 'Dashboard', icon: Search },\r\n          { id: 'resumes', label: 'Resumes', icon: FileText },\r\n          { id: 'settings', label: 'Settings', icon: Settings },\r\n          { id: 'notifications', label: 'Notifications', icon: Bell }\r\n        ].map(tab => (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => setActiveTab(tab.id)}\r\n            className={`flex items-center space-x-2 text-sm font-medium pb-2 border-b-2 ${\r\n              activeTab === tab.id\r\n                ? 'border-blue-500 text-blue-600'\r\n                : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n            }`}\r\n          >\r\n            <tab.icon className=\"w-4 h-4\" />\r\n            <span>{tab.label}</span>\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Dashboard Tab */}\r\n      {activeTab === 'dashboard' && (\r\n        <>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n            {/* Scraping Status */}\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n                  <Search className=\"w-6 h-6 text-blue-600\" />\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Scraping Status</h3>\r\n                  <p className={`text-sm ${scrapingStatus.active ? 'text-green-600' : 'text-red-600'}`}>\r\n                    {scrapingStatus.active ? 'Active' : 'Inactive'}\r\n                  </p>\r\n                  {scrapingStatus.lastRun && (\r\n                    <p className=\"text-xs text-gray-500 mt-2\">Last run: {scrapingStatus.lastRun}</p>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Resume Placeholder */}\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n                  <FileText className=\"w-6 h-6 text-green-600\" />\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Active Resumes</h3>\r\n                  <p className=\"text-sm text-gray-600\">Dynamic count can be passed via props</p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Applications Sent */}\r\n            <div className=\"bg-white rounded-lg shadow p-6\">\r\n              <div className=\"flex items-center\">\r\n                <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n                  <Bell className=\"w-6 h-6 text-purple-600\" />\r\n                </div>\r\n                <div className=\"ml-4\">\r\n                  <h3 className=\"text-lg font-semibold text-gray-900\">Applications Sent</h3>\r\n                  <p className=\"text-sm text-gray-600\">\r\n                    {jobAlerts.filter(j => j.applied).length} this week\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Job List & Modal */}\r\n          {selectedJob && (\r\n            <JobModal job={selectedJob} onClose={() => setSelectedJob(null)} />\r\n          )}\r\n\r\n          <div className=\"bg-white rounded-lg shadow\">\r\n            <div className=\"px-6 py-4 border-b\">\r\n              <h2 className=\"text-lg font-semibold text-gray-900\">Recent Job Matches</h2>\r\n            </div>\r\n            <div className=\"divide-y\">\r\n              {jobAlerts.map(job => (\r\n                <div\r\n                  key={job.id}\r\n                  onClick={() => setSelectedJob(job)}\r\n                  className=\"px-6 py-4 flex items-center justify-between cursor-pointer hover:bg-gray-50 transition\"\r\n                >\r\n                  <div>\r\n                    <h3 className=\"font-medium text-gray-900\">{job.title}</h3>\r\n                    <p className=\"text-sm text-gray-500\">\r\n                      Found on {job.site} • {job.date}\r\n                    </p>\r\n                  </div>\r\n                  <span\r\n                    className={`px-2 py-1 text-xs rounded-full ${\r\n                      job.applied ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n                    }`}\r\n                  >\r\n                    {job.applied ? 'Applied' : 'Pending'}\r\n                  </span>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Pagination */}\r\n          <div className=\"flex justify-between items-center mt-4\">\r\n            <button\r\n              onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n              disabled={currentPage === 1}\r\n              className=\"px-4 py-2 text-sm bg-gray-100 rounded hover:bg-gray-200 disabled:opacity-50\"\r\n            >\r\n              ← Previous\r\n            </button>\r\n            <span className=\"text-sm text-gray-600\">Page {currentPage}</span>\r\n            <button\r\n              onClick={() => setCurrentPage((p) => p + 1)}\r\n              className=\"px-4 py-2 text-sm bg-gray-100 rounded hover:bg-gray-200\"\r\n              disabled={jobAlerts.length < pageSize}\r\n            >\r\n              Next →\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Resumes Tab */}\r\n      {activeTab === 'resumes' && (\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Resumes</h2>\r\n          <p className=\"text-sm text-gray-600\">Resume management coming soon.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Settings Tab */}\r\n      {activeTab === 'settings' && (\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Settings</h2>\r\n          <p className=\"text-sm text-gray-600\">Settings panel coming soon.</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Notifications Tab */}\r\n      {activeTab === 'notifications' && (\r\n        <div className=\"bg-white rounded-lg shadow p-6\">\r\n          <h2 className=\"text-lg font-semibold text-gray-900\">Notifications</h2>\r\n          <p className=\"text-sm text-gray-600\">Notification center coming soon.</p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":"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","debugId":null}}]
}