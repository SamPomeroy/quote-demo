{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/components/dashboard/page.tsx"],"sourcesContent":["// 'use client';\r\n\r\n// import { useEffect, useState } from 'react';\r\n// import { createClient } from '@supabase/supabase-js';\r\n// import { Search, FileText, Bell, Settings } from 'lucide-react';\r\n// import JobModal from '../JobModal';\r\n\r\n// interface Job {\r\n//   id: string | number;\r\n//   title: string;\r\n//   site: string;\r\n//   date: string;\r\n//   applied: boolean;\r\n//   job_location?: string;\r\n//   company?: string;\r\n//   job_description?: string;\r\n//   salary?: string;\r\n//   url?: string;\r\n//   job_state: string; // Added to match JobModal's Job type\r\n// }\r\n\r\n// const supabase = createClient(\r\n//   process.env.NEXT_PUBLIC_SUPABASE_URL!,\r\n//   process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\n// );\r\n\r\n// export default function Dashboard() {\r\n//   const [activeTab, setActiveTab] = useState('dashboard');\r\n//   const [jobAlerts, setJobAlerts] = useState<Job[]>([]);\r\n//   const [scrapingStatus, setScrapingStatus] = useState<{ active: boolean; lastRun: string | null }>({\r\n//     active: false,\r\n//     lastRun: null\r\n//   });\r\n//   const [selectedJob, setSelectedJob] = useState<Job | null>(null);\r\n// const [currentPage, setCurrentPage] = useState(1);\r\n// const pageSize = 10;\r\n//   useEffect(() => {\r\n//  const fetchJobs = async (page = 1) => {\r\n//   const from = (page - 1) * pageSize;\r\n//   const to = from + pageSize - 1;\r\n\r\n//   const { data, error } = await supabase\r\n//     .from('jobs')\r\n//     .select('*')\r\n//     .order('date', { ascending: false })\r\n//     .range(from, to);\r\n\r\n//   if (error) {\r\n//     console.error('Error fetching jobs:', error);\r\n//   } else {\r\n//     setJobAlerts(data || []);\r\n//     setScrapingStatus({\r\n//       active: true,\r\n//       lastRun: new Date().toLocaleString()\r\n//     });\r\n//   }\r\n// };\r\n\r\n\r\n//     fetchJobs();\r\n//   }, []);\r\n\r\n//   useEffect(() => {\r\n//     document.body.style.overflow = selectedJob ? 'hidden' : '';\r\n//   }, [selectedJob]);\r\n\r\n//   return (\r\n//     <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8 space-y-6\">\r\n//       {/* Tab Navigation */}\r\n//       <div className=\"flex space-x-6 border-b pb-2\">\r\n//         {[\r\n//           { id: 'dashboard', label: 'Dashboard', icon: Search },\r\n//           { id: 'resumes', label: 'Resumes', icon: FileText },\r\n//           { id: 'settings', label: 'Settings', icon: Settings },\r\n//           { id: 'notifications', label: 'Notifications', icon: Bell }\r\n//         ].map(tab => (\r\n//           <button\r\n//             key={tab.id}\r\n//             onClick={() => setActiveTab(tab.id)}\r\n//             className={`flex items-center space-x-2 text-sm font-medium pb-2 border-b-2 ${\r\n//               activeTab === tab.id\r\n//                 ? 'border-blue-500 text-blue-600'\r\n//                 : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n//             }`}\r\n//           >\r\n//             <tab.icon className=\"w-4 h-4\" />\r\n//             <span>{tab.label}</span>\r\n//           </button>\r\n//         ))}\r\n//       </div>\r\n\r\n//       {/* Dashboard Tab */}\r\n//       {activeTab === 'dashboard' && (\r\n//         <>\r\n//           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n//             <div className=\"bg-white rounded-lg shadow p-6\">\r\n//               <div className=\"flex items-center\">\r\n//                 <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\r\n//                   <Search className=\"w-6 h-6 text-blue-600\" />\r\n//                 </div>\r\n//                 <div className=\"ml-4\">\r\n//                   <h3 className=\"text-lg font-semibold text-gray-900\">Scraping Status</h3>\r\n//                   <p className={`text-sm ${scrapingStatus.active ? 'text-green-600' : 'text-red-600'}`}>\r\n//                     {scrapingStatus.active ? 'Active' : 'Inactive'}\r\n//                   </p>\r\n//                   {scrapingStatus.lastRun && (\r\n//                     <p className=\"text-xs text-gray-500 mt-2\">Last run: {scrapingStatus.lastRun}</p>\r\n//                   )}\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"bg-white rounded-lg shadow p-6\">\r\n//               <div className=\"flex items-center\">\r\n//                 <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\r\n//                   <FileText className=\"w-6 h-6 text-green-600\" />\r\n//                 </div>\r\n//                 <div className=\"ml-4\">\r\n//                   <h3 className=\"text-lg font-semibold text-gray-900\">Active Resumes</h3>\r\n//                   <p className=\"text-sm text-gray-600\">Dynamic count can be passed via props</p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n\r\n//             <div className=\"bg-white rounded-lg shadow p-6\">\r\n//               <div className=\"flex items-center\">\r\n//                 <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\r\n//                   <Bell className=\"w-6 h-6 text-purple-600\" />\r\n//                 </div>\r\n//                 <div className=\"ml-4\">\r\n//                   <h3 className=\"text-lg font-semibold text-gray-900\">Applications Sent</h3>\r\n//                   <p className=\"text-sm text-gray-600\">\r\n//                     {jobAlerts.filter(j => j.applied).length} this week\r\n//                   </p>\r\n//                 </div>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n\r\n//           {/* Job Modal */}\r\n//           {selectedJob && (\r\n//             <JobModal job={selectedJob} onCloseAction={() => setSelectedJob(null)} />\r\n//           )}\r\n\r\n//           {/* Job List */}\r\n//           <div className=\"bg-white rounded-lg shadow\">\r\n//             <div className=\"px-6 py-4 border-b\">\r\n//               <h2 className=\"text-lg font-semibold text-gray-900\">Recent Job Matches</h2>\r\n//             </div>\r\n//             <div className=\"divide-y\">\r\n//               {jobAlerts.map(job => (\r\n//                 <div\r\n//                   key={job.id}\r\n//                   onClick={() => setSelectedJob(job)}\r\n//                   className=\"px-6 py-4 flex items-center justify-between cursor-pointer hover:bg-gray-50 transition\"\r\n//                 >\r\n//                   <div>\r\n//                     <h3 className=\"font-medium text-gray-900\">{job.title}</h3>\r\n//                     <p className=\"text-sm text-gray-500\">\r\n//                       Found on {job.site} • {job.date}\r\n//                     </p>\r\n//                   </div>\r\n//                   <span\r\n//                     className={`px-2 py-1 text-xs rounded-full ${\r\n//                       job.applied ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'\r\n//                     }`}\r\n//                   >\r\n//                     {job.applied ? 'Applied' : 'Pending'}\r\n//                   </span>\r\n//                 </div>\r\n//               ))}\r\n//             </div>\r\n//           </div>\r\n//         </>\r\n//       )}\r\n\r\n//       {/* Resumes Tab */}\r\n//       {activeTab === 'resumes' && (\r\n//         <div className=\"bg-white rounded-lg shadow p-6\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Resumes</h2>\r\n//           <p className=\"text-sm text-gray-600\">Resume management coming soon.</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Settings Tab */}\r\n//       {activeTab === 'settings' && (\r\n//         <div className=\"bg-white rounded-lg shadow p-6\">\r\n//           <h2 className=\"text-lg font-semibold text-gray-900\">Settings</h2>\r\n//           <p className=\"text-sm text-gray-600\">Settings panel coming soon.</p>\r\n//         </div>\r\n//       )}\r\n\r\n//       {/* Notifications Tab */}\r\n//       {activeTab === 'notifications' && (\r\n//         <div className=\"bg-white rounded-lg shadow p-6\">\r\n//           <h2 className=\"te<div className=\"flex justify-between items-center mt-4\">\r\n//   <button\r\n//     onClick={() => setCurrentPage((p) => Math.max(p - 1, 1))}\r\n//     disabled={currentPage === 1}\r\n//     className=\"px-4 py-2 text-sm bg-gray-100 rounded hover:bg-gray-200 disabled:opacity-50\"\r\n//   >\r\n//     ← Previous\r\n//   </button>\r\n//   <span className=\"text-sm text-gray-600\">Page {currentPage}</span>\r\n//   <button\r\n//     onClick={() => setCurrentPage((p) => p + 1)}\r\n//     className=\"px-4 py-2 text-sm bg-gray-100 rounded hover:bg-gray-200\"\r\n//   >\r\n//     Next →\r\n//   </button>\r\n// </div>\r\n// xt-lg font-semibold text-gray-900\">Notifications</h2>\r\n//           <p className=\"text-sm text-gray-600\">Notification center coming soon.</p>\r\n//         </div>\r\n//       )}\r\n//     </div>\r\n    \r\n//   );\r\n// }"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 212, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useEffect } from 'react';\nimport { Upload, FileText, Settings, Bell, Search, User, LogOut, Eye, Trash2, Plus } from 'lucide-react';\nimport Dashboard from './components/dashboard/page';\nimport '../app/globals.css'\ntype UserType = {\n  id: string;\n  email: string;\n  name: string;\n} | null;\n\nexport default function Home() {\n  // const [user, setUser] = useState<UserType>(null);\n  // const [activeTab, setActiveTab] = useState('dashboard');\n  // const [resumes, setResumes] = useState<any[]>([]);\n  // const [jobAlerts, setJobAlerts] = useState<any[]>([]);\n  // const [scrapingStatus, setScrapingStatus] = useState<{ active: boolean; lastRun: string | null }>({ active: false, lastRun: null });\n  // const [keywords, setKeywords] = useState<string[]>(['junior web developer', 'software engineer', 'data analyst']);\n  // const [newKeyword, setNewKeyword] = useState('');\n  // const handleLogin = () => {\n  //   setUser({ id: '1', email: 'user@example.com', name: 'John Doe' });\n  // };\n\n  // const handleLogout = () => {\n  //   setUser(null);\n  //   setActiveTab('dashboard');\n  // };\n\n  // // File upload handler\n  // const handleResumeUpload = (event: React.ChangeEvent<HTMLInputElement>) => {\n  //   const files = event.target.files;\n  //   if (!files || files.length === 0) {\n  //     alert('Please upload a PDF file');\n  //     return;\n  //   }\n  //   const file = files[0];\n  //   if (file && file.type === 'application/pdf') {\n  //     const newResume = {\n  //       id: Date.now(),\n  //       name: file.name,\n  //       type: 'General',\n  //       uploadDate: new Date().toISOString(),\n  //       size: file.size,\n  //       active: resumes.length === 0\n  //     };\n  //     setResumes([...resumes, newResume]);\n  //   } else {\n  //     alert('Please upload a PDF file');\n  //   }\n  // };\n\n  // const toggleResumeActive = (id: any) => {\n  //   setResumes(resumes.map(resume => ({\n  //     ...resume,\n  //     active: resume.id === id ? !resume.active : resume.active\n  //   })));\n  // };\n\n  // const deleteResume = (id: any) => {\n  //   setResumes(resumes.filter(resume => resume.id !== id));\n  // };\n\n  // const addKeyword = () => {\n  //   if (newKeyword.trim() && !keywords.includes(newKeyword.trim())) {\n  //     setKeywords([...keywords, newKeyword.trim()]);\n  //     setNewKeyword('');\n  //   }\n  // };\n\n  // const removeKeyword = (keyword: string) => {\n  //   setKeywords(keywords.filter(k => k !== keyword));\n  // };\n  // useEffect(() => {\n  //   if (user) {\n  //     setJobAlerts([\n  //       { id: 1, title: 'Frontend Developer at TechCorp', site: 'Indeed', applied: true, date: '2024-01-15' },\n  //       { id: 2, title: 'React Developer at StartupXYZ', site: 'LinkedIn', applied: true, date: '2024-01-14' },\n  //       { id: 3, title: 'Software Engineer at BigTech', site: 'Glassdoor', applied: false, date: '2024-01-14' }\n  //     ]);\n  //     setScrapingStatus({ active: true, lastRun: '2024-01-15 10:30 AM' });\n  //   }\n  // }, [user]);\n\n  // if (!user) {\n\n  //   return (\n  //     <div className=\"min-h-screen bg-gradient-to-br from-blue-900 via-purple-900 to-indigo-900 flex items-center justify-center p-4\">\n  //       <div className=\"bg-white/10 backdrop-blur-lg rounded-2xl p-8 w-full max-w-md border border-white/20\">\n  //         <div className=\"text-center mb-8\">\n  //           <div className=\"w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-500 rounded-full flex items-center justify-center mx-auto mb-4\">\n  //             <Search className=\"w-8 h-8 text-white\" />\n  //           </div>\n  //           <h1 className=\"text-3xl font-bold text-white mb-2\">JobHunter AI</h1>\n  //           <p className=\"text-white/70\">Automate your job search with smart scraping</p>\n  //         </div>\n          \n  //         <button\n  //           onClick={handleLogin}\n  //           className=\"w-full bg-gradient-to-r from-blue-500 to-purple-600 text-white py-3 px-6 rounded-lg font-semibold hover:from-blue-600 hover:to-purple-700 transition-all duration-200 transform hover:scale-105\"\n  //         >\n  //           Sign In with Supabase\n  //         </button>\n          \n  //         <p className=\"text-white/50 text-sm text-center mt-4\">\n  //           Secure authentication powered by Supabase\n  //         </p>\n  //       </div>\n  //     </div>\n  //   );\n  // }\n\n  // return (\n  //   <div className=\"min-h-screen bg-gray-50\">\n  //     {/* Header */}\n  //     <header className=\"bg-white shadow-sm border-b\">\n  //       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n  //         <div className=\"flex justify-between items-center h-16\">\n  //           <div className=\"flex items-center\">\n  //             <div className=\"w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-lg flex items-center justify-center mr-3\">\n  //               <Search className=\"w-5 h-5 text-white\" />\n  //             </div>\n  //             <h1 className=\"text-xl font-bold text-gray-900\">JobHunter AI</h1>\n  //           </div>\n            \n  //           <div className=\"flex items-center space-x-4\">\n  //             <span className=\"text-sm text-gray-600\">{user.email}</span>\n  //             <button\n  //               onClick={handleLogout}\n  //               className=\"flex items-center space-x-1 text-gray-600 hover:text-gray-900\"\n  //             >\n  //               <LogOut className=\"w-4 h-4\" />\n  //               <span>Logout</span>\n  //             </button>\n  //           </div>\n  //         </div>\n  //       </div>\n  //     </header>\n\n  //     {/* Navigation */}\n  //     <nav className=\"bg-white shadow-sm\">\n  //       <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n  //         <div className=\"flex space-x-8\">\n  //           {[\n  //             { id: 'dashboard', label: 'Dashboard', icon: Search },\n  //             { id: 'resumes', label: 'Resumes', icon: FileText },\n  //             { id: 'settings', label: 'Settings', icon: Settings },\n  //             { id: 'notifications', label: 'Notifications', icon: Bell }\n  //           ].map(tab => (\n  //             <button\n  //               key={tab.id}\n  //               onClick={() => setActiveTab(tab.id)}\n  //               className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm ${\n  //                 activeTab === tab.id\n  //                   ? 'border-blue-500 text-blue-600'\n  //                   : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\n  //               }`}\n  //             >\n  //               <tab.icon className=\"w-4 h-4\" />\n  //               <span>{tab.label}</span>\n  //             </button>\n  //           ))}\n  //         </div>\n  //       </div>\n  //     </nav>\n\n  //     {/* Main Content */}\n  //     <main className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\">\n  //       {activeTab === 'dashboard' && (\n  //         <div className=\"space-y-6\">\n  //           {/* Status Cards */}\n  //           <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n  //             <div className=\"bg-white rounded-lg shadow p-6\">\n  //               <div className=\"flex items-center\">\n  //                 <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n  //                   <Search className=\"w-6 h-6 text-blue-600\" />\n  //                 </div>\n  //                 <div className=\"ml-4\">\n  //                   <h3 className=\"text-lg font-semibold text-gray-900\">Scraping Status</h3>\n  //                   <p className={`text-sm ${scrapingStatus.active ? 'text-green-600' : 'text-red-600'}`}>\n  //                     {scrapingStatus.active ? 'Active' : 'Inactive'}\n  //                   </p>\n  //                 </div>\n  //               </div>\n  //               {scrapingStatus.lastRun && (\n  //                 <p className=\"text-xs text-gray-500 mt-2\">Last run: {scrapingStatus.lastRun}</p>\n  //               )}\n  //             </div>\n              \n  //             <div className=\"bg-white rounded-lg shadow p-6\">\n  //               <div className=\"flex items-center\">\n  //                 <div className=\"w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center\">\n  //                   <FileText className=\"w-6 h-6 text-green-600\" />\n  //                 </div>\n  //                 <div className=\"ml-4\">\n  //                   <h3 className=\"text-lg font-semibold text-gray-900\">Active Resumes</h3>\n  //                   <p className=\"text-sm text-gray-600\">\n  //                     {resumes.filter(r => r.active).length} of {resumes.length}\n  //                   </p>\n  //                 </div>\n  //               </div>\n  //             </div>\n              \n  //             <div className=\"bg-white rounded-lg shadow p-6\">\n  //               <div className=\"flex items-center\">\n  //                 <div className=\"w-12 h-12 bg-purple-100 rounded-lg flex items-center justify-center\">\n  //                   <Bell className=\"w-6 h-6 text-purple-600\" />\n  //                 </div>\n  //                 <div className=\"ml-4\">\n  //                   <h3 className=\"text-lg font-semibold text-gray-900\">Applications Sent</h3>\n  //                   <p className=\"text-sm text-gray-600\">\n  //                     {jobAlerts.filter(j => j.applied).length} this week\n  //                   </p>\n  //                 </div>\n  //               </div>\n  //             </div>\n  //           </div>\n\n  //           {/* Recent Job Alerts */}\n  //           <div className=\"bg-white rounded-lg shadow\">\n  //             <div className=\"px-6 py-4 border-b\">\n  //               <h2 className=\"text-lg font-semibold text-gray-900\">Recent Job Matches</h2>\n  //             </div>\n  //             <div className=\"divide-y\">\n  //               {jobAlerts.map(job => (\n  //                 <div key={job.id} className=\"px-6 py-4 flex items-center justify-between\">\n  //                   <div>\n  //                     <h3 className=\"font-medium text-gray-900\">{job.title}</h3>\n  //                     <p className=\"text-sm text-gray-500\">Found on {job.site} • {job.date}</p>\n  //                   </div>\n  //                   <div className=\"flex items-center space-x-2\">\n  //                     <span className={`px-2 py-1 text-xs rounded-full ${\n  //                       job.applied \n  //                         ? 'bg-green-100 text-green-800' \n  //                         : 'bg-yellow-100 text-yellow-800'\n  //                     }`}>\n  //                       {job.applied ? 'Applied' : 'Pending'}\n  //                     </span>\n  //                   </div>\n  //                 </div>\n  //               ))}\n  //             </div>\n  //           </div>\n  //         </div>\n  //       )}\n\n  //       {activeTab === 'resumes' && (\n  //         <div className=\"space-y-6\">\n  //           <div className=\"flex justify-between items-center\">\n  //             <h2 className=\"text-2xl font-bold text-gray-900\">Resume Management</h2>\n  //             <label className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 cursor-pointer flex items-center space-x-2\">\n  //               <Upload className=\"w-4 h-4\" />\n  //               <span>Upload Resume</span>\n  //               <input\n  //                 type=\"file\"\n  //                 accept=\".pdf\"\n  //                 onChange={handleResumeUpload}\n  //                 className=\"hidden\"\n  //               />\n  //             </label>\n  //           </div>\n\n  //           <div className=\"grid gap-4\">\n  //             {resumes.length === 0 ? (\n  //               <div className=\"bg-white rounded-lg shadow p-8 text-center\">\n  //                 <FileText className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\n  //                 <h3 className=\"text-lg font-medium text-gray-900 mb-2\">No resumes uploaded</h3>\n  //                 <p className=\"text-gray-500\">Upload your first resume to get started with automated job applications.</p>\n  //               </div>\n  //             ) : (\n  //               resumes.map(resume => (\n  //                 <div key={resume.id} className=\"bg-white rounded-lg shadow p-6\">\n  //                   <div className=\"flex items-center justify-between\">\n  //                     <div className=\"flex items-center space-x-4\">\n  //                       <div className=\"w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center\">\n  //                         <FileText className=\"w-6 h-6 text-blue-600\" />\n  //                       </div>\n  //                       <div>\n  //                         <h3 className=\"font-medium text-gray-900\">{resume.name}</h3>\n  //                         <p className=\"text-sm text-gray-500\">\n  //                           {resume.type} • Uploaded {new Date(resume.uploadDate).toLocaleDateString()}\n  //                         </p>\n  //                       </div>\n  //                     </div>\n  //                     <div className=\"flex items-center space-x-2\">\n  //                       <button\n  //                         onClick={() => toggleResumeActive(resume.id)}\n  //                         className={`px-3 py-1 text-sm rounded-full ${\n  //                           resume.active\n  //                             ? 'bg-green-100 text-green-800'\n  //                             : 'bg-gray-100 text-gray-800'\n  //                         }`}\n  //                       >\n  //                         {resume.active ? 'Active' : 'Inactive'}\n  //                       </button>\n  //                       <button className=\"p-2 text-gray-400 hover:text-gray-600\">\n  //                         <Eye className=\"w-4 h-4\" />\n  //                       </button>\n  //                       <button\n  //                         onClick={() => deleteResume(resume.id)}\n  //                         className=\"p-2 text-gray-400 hover:text-red-600\"\n  //                       >\n  //                         <Trash2 className=\"w-4 h-4\" />\n  //                       </button>\n  //                     </div>\n  //                   </div>\n  //                 </div>\n  //               ))\n  //             )}\n  //           </div>\n  //         </div>\n  //       )}\n\n  //       {activeTab === 'settings' && (\n  //         <div className=\"space-y-6\">\n  //           <h2 className=\"text-2xl font-bold text-gray-900\">Settings</h2>\n            \n  //           <div className=\"bg-white rounded-lg shadow p-6\">\n  //             <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Job Search Keywords</h3>\n              \n  //             <div className=\"flex space-x-2 mb-4\">\n  //               <input\n  //                 type=\"text\"\n  //                 value={newKeyword}\n  //                 onChange={(e) => setNewKeyword(e.target.value)}\n  //                 placeholder=\"Add new keyword...\"\n  //                 className=\"flex-1 border border-gray-300 rounded-lg px-3 py-2\"\n  //                 onKeyPress={(e) => e.key === 'Enter' && addKeyword()}\n  //               />\n  //               <button\n  //                 onClick={addKeyword}\n  //                 className=\"bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center space-x-1\"\n  //               >\n  //                 <Plus className=\"w-4 h-4\" />\n  //                 <span>Add</span>\n  //               </button>\n  //             </div>\n              \n  //             <div className=\"flex flex-wrap gap-2\">\n  //               {keywords.map(keyword => (\n  //                 <span\n  //                   key={keyword}\n  //                   className=\"bg-blue-100 text-blue-800 px-3 py-1 rounded-full text-sm flex items-center space-x-1\"\n  //                 >\n  //                   <span>{keyword}</span>\n  //                   <button\n  //                     onClick={() => removeKeyword(keyword)}\n  //                     className=\"text-blue-600 hover:text-blue-800\"\n  //                   >\n  //                     ×\n  //                   </button>\n  //                 </span>\n  //               ))}\n  //             </div>\n  //           </div>\n\n  //           <div className=\"bg-white rounded-lg shadow p-6\">\n  //             <h3 className=\"text-lg font-semibold text-gray-900 mb-4\">Scraping Settings</h3>\n  //             <div className=\"space-y-4\">\n  //               <div className=\"flex items-center justify-between\">\n  //                 <span className=\"text-gray-700\">Auto-scrape every 4 hours</span>\n  //                 <label className=\"relative inline-flex items-center cursor-pointer\">\n  //                   <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\n  //                   <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n  //                 </label>\n  //               </div>\n  //               <div className=\"flex items-center justify-between\">\n  //                 <span className=\"text-gray-700\">Auto-apply to matching jobs</span>\n  //                 <label className=\"relative inline-flex items-center cursor-pointer\">\n  //                   <input type=\"checkbox\" className=\"sr-only peer\" defaultChecked />\n  //                   <div className=\"w-11 h-6 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-blue-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:border-gray-300 after:border after:rounded-full after:h-5 after:w-5 after:transition-all peer-checked:bg-blue-600\"></div>\n  //                 </label>\n  //               </div>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       )}\n\n  //       {activeTab === 'notifications' && (\n  //         <div className=\"space-y-6\">\n  //           <h2 className=\"text-2xl font-bold text-gray-900\">Notifications</h2>\n            \n  //           <div className=\"bg-white rounded-lg shadow\">\n  //             <div className=\"px-6 py-4 border-b\">\n  //               <h3 className=\"text-lg font-semibold text-gray-900\">Recent Activity</h3>\n  //             </div>\n  //             <div className=\"divide-y\">\n  //               <div className=\"px-6 py-4\">\n  //                 <div className=\"flex items-start space-x-3\">\n  //                   <div className=\"w-2 h-2 bg-green-500 rounded-full mt-2\"></div>\n  //                   <div>\n  //                     <p className=\"text-sm text-gray-900\">Resume submitted to Frontend Developer position at TechCorp</p>\n  //                     <p className=\"text-xs text-gray-500\">2 hours ago</p>\n  //                   </div>\n  //                 </div>\n  //               </div>\n  //               <div className=\"px-6 py-4\">\n  //                 <div className=\"flex items-start space-x-3\">\n  //                   <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2\"></div>\n  //                   <div>\n  //                     <p className=\"text-sm text-gray-900\">3 new job matches found for \"React Developer\"</p>\n  //                     <p className=\"text-xs text-gray-500\">4 hours ago</p>\n  //                   </div>\n  //                 </div>\n  //               </div>\n  //               <div className=\"px-6 py-4\">\n  //                 <div className=\"flex items-start space-x-3\">\n  //                   <div className=\"w-2 h-2 bg-purple-500 rounded-full mt-2\"></div>\n  //                   <div>\n  //                     <p className=\"text-sm text-gray-900\">Scraping completed successfully</p>\n  //                     <p className=\"text-xs text-gray-500\">8 hours ago</p>\n  //                   </div>\n  //                 </div>\n  //               </div>\n  //             </div>\n  //           </div>\n  //         </div>\n  //       )}\n  //     </main>\n  //   </div>\n   return(\n    <Dashboard/>\n   )\n  }\n"],"names":[],"mappings":"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","debugId":null}}]
}