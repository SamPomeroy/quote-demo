{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/page.tsx"],"sourcesContent":["'use client'\nimport React, { useState, useEffect } from 'react';\nimport { Upload, FileText, Settings, Bell, Search, User, LogOut, Eye, Trash2, Plus } from 'lucide-react';\nimport AuthForm from './'\nimport '../app/globals.css'\n\n\ntype UserType = {\n  id: string;\n  email: string;\n  name: string;\n} | null;\ninterface AuthUser {\n  id: string;\n  email: string;\n  user_metadata?: {\n    role?: 'user' | 'admin';\n    full_name?: string;\n  };\n}\n\ninterface AuthUser {\n  id: string;\n  email: string;\n  user_metadata?: {\n    role?: 'user' | 'admin';\n    full_name?: string;\n  };\n}\n\n// Supabase client setup\nif (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n  throw new Error('Supabase environment variables are not set.');\n}\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY\n);\n\nexport default function App() {\n  const [user, setUser] = useState<AuthUser | null>(null);\n  const [currentPage, setCurrentPage] = useState('home');\n  const [loading, setLoading] = useState(true);\n\n  // Check for existing session on mount\n  useEffect(() => {\n    const checkSession = async () => {\n      const { data: { session }, error } = await supabase.auth.getSession();\n      if (error) {\n        console.error('Error checking session:', error);\n      } else if (session?.user) {\n        setUser(session.user as AuthUser);\n        setCurrentPage('dashboard');\n      }\n      setLoading(false);\n    };\n\n    checkSession();\n\n    // Listen for auth state changes\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {\n      if (event === 'SIGNED_IN' && session?.user) {\n        setUser(session.user as AuthUser);\n        setCurrentPage('dashboard');\n      } else if (event === 'SIGNED_OUT') {\n        setUser(null);\n        setCurrentPage('home');\n      }\n    });\n\n    return () => subscription.unsubscribe();\n  }, []);\n\n  const handleLogout = async () => {\n    await supabase.auth.signOut();\n  };\n\n  const handleAuthSuccess = (authUser: AuthUser) => {\n    setUser(authUser);\n    setCurrentPage('dashboard');\n  };\n\n  if (loading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <Navbar \n        user={user} \n        onLogout={handleLogout} \n        currentPage={currentPage} \n        setCurrentPage={setCurrentPage} \n      />\n      \n      <main className=\"flex-1\">\n        {currentPage === 'home' && <HomePage user={user} setCurrentPage={setCurrentPage} />}\n        {currentPage === 'about' && <AboutPage />}\n        {currentPage === 'contact' && <ContactPage />}\n        {currentPage === 'login' && (\n          <AuthForm \n            mode=\"login\" \n            onSuccess={handleAuthSuccess} \n            setCurrentPage={setCurrentPage} \n          />\n        )}\n        {currentPage === 'register' && (\n          <AuthForm \n            mode=\"register\" \n            onSuccess={handleAuthSuccess} \n            setCurrentPage={setCurrentPage} \n          />\n        )}\n        {currentPage === 'dashboard' && user && <Dashboard user={user} />}\n      </main>\n      \n      <Footer setCurrentPage={setCurrentPage} />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;;;;;;AADA;;;;;AA8BA,wBAAwB;AACxB,uCAAyF;;AAEzF;AACA,MAAM,WAAW;AAKF,SAAS;IACtB,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAmB;IAClD,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAC/C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,sCAAsC;IACtC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,eAAe;YACnB,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,UAAU;YACnE,IAAI,OAAO;gBACT,QAAQ,KAAK,CAAC,2BAA2B;YAC3C,OAAO,IAAI,SAAS,MAAM;gBACxB,QAAQ,QAAQ,IAAI;gBACpB,eAAe;YACjB;YACA,WAAW;QACb;QAEA;QAEA,gCAAgC;QAChC,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,GAAG,SAAS,IAAI,CAAC,iBAAiB,CAAC,CAAC,OAAO;YACzE,IAAI,UAAU,eAAe,SAAS,MAAM;gBAC1C,QAAQ,QAAQ,IAAI;gBACpB,eAAe;YACjB,OAAO,IAAI,UAAU,cAAc;gBACjC,QAAQ;gBACR,eAAe;YACjB;QACF;QAEA,OAAO,IAAM,aAAa,WAAW;IACvC,GAAG,EAAE;IAEL,MAAM,eAAe;QACnB,MAAM,SAAS,IAAI,CAAC,OAAO;IAC7B;IAEA,MAAM,oBAAoB,CAAC;QACzB,QAAQ;QACR,eAAe;IACjB;IAEA,IAAI,SAAS;QACX,qBACE,8OAAC;YAAI,WAAU;sBACb,cAAA,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAI,WAAU;;;;;;kCACf,8OAAC;wBAAE,WAAU;kCAAqB;;;;;;;;;;;;;;;;;IAI1C;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBACC,MAAM;gBACN,UAAU;gBACV,aAAa;gBACb,gBAAgB;;;;;;0BAGlB,8OAAC;gBAAK,WAAU;;oBACb,gBAAgB,wBAAU,8OAAC;wBAAS,MAAM;wBAAM,gBAAgB;;;;;;oBAChE,gBAAgB,yBAAW,8OAAC;;;;;oBAC5B,gBAAgB,2BAAa,8OAAC;;;;;oBAC9B,gBAAgB,yBACf,8OAAC;wBACC,MAAK;wBACL,WAAW;wBACX,gBAAgB;;;;;;oBAGnB,gBAAgB,4BACf,8OAAC;wBACC,MAAK;wBACL,WAAW;wBACX,gBAAgB;;;;;;oBAGnB,gBAAgB,eAAe,sBAAQ,8OAAC;wBAAU,MAAM;;;;;;;;;;;;0BAG3D,8OAAC;gBAAO,gBAAgB;;;;;;;;;;;;AAG9B","debugId":null}}]
}