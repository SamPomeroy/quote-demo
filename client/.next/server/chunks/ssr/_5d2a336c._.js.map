{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 24, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/supabase/client.ts"],"sourcesContent":["// import { createClient } from '@supabase/supabase-js'\r\n\r\n// const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL!\r\n// const supabaseAnonKey = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\r\nimport { createPagesBrowserClient } from '@supabase/auth-helpers-nextjs';\r\nimport type { SupabaseClient } from '@supabase/supabase-js';\r\nimport type { Database } from '@/app/types/supabase';\r\n\r\nexport const supabase: SupabaseClient<Database> = createPagesBrowserClient<Database>();\r\n// Example: Fetch jobs and log the result (remove or modify as needed)\r\nasync function fetchJobs() {\r\n  const { data, error } = await supabase\r\n    .from(\"jobs\")\r\n    .select(\"*\")\r\n    .order(\"date\", { ascending: false })\r\n    .limit(20);\r\n\r\n  if (error) {\r\n    console.error(\"Error fetching jobs:\", error);\r\n  } else {\r\n    console.log(\"Fetched jobs:\", data);\r\n  }\r\n}\r\n\r\n// fetchJobs(); // Uncomment and call this function from a React component or useEffect when needed\r\n\r\n// export const supabase = createClient(supabaseUrl, supabaseAnonKey)"],"names":[],"mappings":"AAAA,uDAAuD;AAEvD,4DAA4D;AAC5D,qEAAqE;;;;AACrE;;AAIO,MAAM,WAAqC,CAAA,GAAA,wKAAA,CAAA,2BAAwB,AAAD;AACzE,sEAAsE;AACtE,eAAe;IACb,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAC3B,IAAI,CAAC,QACL,MAAM,CAAC,KACP,KAAK,CAAC,QAAQ;QAAE,WAAW;IAAM,GACjC,KAAK,CAAC;IAET,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,wBAAwB;IACxC,OAAO;QACL,QAAQ,GAAG,CAAC,iBAAiB;IAC/B;AACF,EAEA,mGAAmG;CAEnG,qEAAqE","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/supabase/user.ts"],"sourcesContent":["import { supabase } from './client';\r\nimport { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\r\nimport { cookies } from 'next/headers';\r\n// For client components (hooks, useEffect, etc.)\r\nexport async function getUserClient() {\r\n  const { data, error } = await supabase.auth.getUser();\r\n  if (error) {\r\n    console.error('Client-side user fetch error:', error);\r\n    return undefined;\r\n  }\r\n  return data.user;\r\n}\r\n\r\n// For server components and routes\r\nexport async function getUserServer() {\r\n  const supabase = createServerComponentClient({ cookies });\r\n  const { data, error } = await supabase.auth.getUser();\r\n  if (error) {\r\n    console.error('Server-side user fetch error:', error);\r\n    return null;\r\n  }\r\n  return data.user;\r\n}"],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;AAEO,eAAe;IACpB,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,gIAAA,CAAA,WAAQ,CAAC,IAAI,CAAC,OAAO;IACnD,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;IACT;IACA,OAAO,KAAK,IAAI;AAClB;AAGO,eAAe;IACpB,MAAM,WAAW,CAAA,GAAA,wKAAA,CAAA,8BAA2B,AAAD,EAAE;QAAE,SAAA,+HAAA,CAAA,UAAO;IAAC;IACvD,MAAM,EAAE,IAAI,EAAE,KAAK,EAAE,GAAG,MAAM,SAAS,IAAI,CAAC,OAAO;IACnD,IAAI,OAAO;QACT,QAAQ,KAAK,CAAC,iCAAiC;QAC/C,OAAO;IACT;IACA,OAAO,KAAK,IAAI;AAClB","debugId":null}},
    {"offset": {"line": 86, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/components/AppShell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/AppShell.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/AppShell.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 100, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/components/AppShell.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/components/AppShell.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/components/AppShell.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///C:/Users/snoep_a5dedf8/Desktop/job-scraper/client/src/app/page.tsx"],"sourcesContent":["\n\n// src/app/page.tsx\nimport { getUserServer } from '@/app/supabase/user';\nimport AppShell from '@/app/components/AppShell';\nimport { createClient } from '@supabase/supabase-js';\nimport type { AuthUser } from '@/app/types/auth';\n\n\nexport default async function Page() {\n  const user = await getUserServer();\n  return <AppShell initialUser={user as AuthUser | null} />;\n}  \n\n\n\nconst supabase = createClient(\n  process.env.NEXT_PUBLIC_SUPABASE_URL!,\n  process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY!\n);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// 'use client'\n// import React, { useState, useEffect } from 'react';\n// import { Upload, FileText, Settings, Bell, Search, User, LogOut, Eye, Trash2, Plus } from 'lucide-react';\n// import { getUserServer } from '@/app/supabase/user';\n// import type { AuthUser } from '@/app/types/auth';\n// import '../app/globals.css'\n// import { createClient } from '@supabase/supabase-js';\n// import { createServerComponentClient } from '@supabase/auth-helpers-nextjs';\n// import { cookies } from 'next/headers';\n\n\n\n\n\n// if (!process.env.NEXT_PUBLIC_SUPABASE_URL || !process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY) {\n//   throw new Error('Supabase environment variables are not set.');\n// }\n\n// export default async function App() {\n//   const supabase = createServerComponentClient({ cookies });\n//   const {\n//     data: { user }\n//   } = await supabase.auth.getUser();\n//   const [currentPage, setCurrentPage] = useState('home');\n//   const [loading, setLoading] = useState(true);\n  \n//   const user = await getUserServer(); \n//   const supabase = createClient(\n//     process.env.NEXT_PUBLIC_SUPABASE_URL as string,\n//     process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY as string\n//   );\n//   // Check for existing session on mount\n//   useEffect(() => {\n//     const checkSession = async () => {\n//       const { data: { session }, error } = await supabase.auth.getSession();\n//       if (error) {\n//         console.error('Error checking session:', error);\n//       } else if (session?.user) {\n//         setUser(session.user as AuthUser);\n//         setCurrentPage('dashboard');\n//       }\n//       setLoading(false);\n//     };\n\n//     checkSession();\n\n//     // Listen for auth state changes\n//     const { data: { subscription } } = supabase.auth.onAuthStateChange((event, session) => {\n//       if (event === 'SIGNED_IN' && session?.user) {\n//         setUser(session.user as AuthUser);\n//         setCurrentPage('dashboard');\n//       } else if (event === 'SIGNED_OUT') {\n//         setUser(null);\n//         setCurrentPage('home');\n//       }\n//     });\n\n//     return () => subscription.unsubscribe();\n//   }, []);\n\n//   const handleLogout = async () => {\n//     await supabase.auth.signOut();\n//   };\n\n//   const handleAuthSuccess = (authUser: AuthUser) => {\n//     setUser(authUser);\n//     setCurrentPage('dashboard');\n//   };\n\n//   if (loading) {\n//     return (\n//       <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n//         <div className=\"text-center\">\n//           <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n//           <p className=\"mt-4 text-gray-600\">Loading...</p>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   return (\n//     <div className=\"min-h-screen bg-gray-50\">\n//       <Navbar \n//         user={user} \n//         onLogout={handleLogout} \n//         currentPage={currentPage} \n//         setCurrentPage={setCurrentPage} \n//       />\n      \n//       <main className=\"flex-1\">\n//         {currentPage === 'home' && <HomePage user={user} setCurrentPage={setCurrentPage} />}\n//         {currentPage === 'about' && <AboutPage />}\n//         {currentPage === 'contact' && <ContactPage />}\n//         {currentPage === 'login' && (\n//           <AuthForm \n//             mode=\"login\" \n//             onSuccess={handleAuthSuccess} \n//             setCurrentPage={setCurrentPage} \n//           />\n//         )}\n//         {currentPage === 'register' && (\n//           <AuthForm \n//             mode=\"register\" \n//             onSuccess={handleAuthSuccess} \n//             setCurrentPage={setCurrentPage} \n//           />\n//         )}\n//         {currentPage === 'dashboard' && user && <Dashboard user={user} />}\n//       </main>\n      \n//       <Footer setCurrentPage={setCurrentPage} />\n//     </div>\n//   );\n// }\n"],"names":[],"mappings":"AAEA,mBAAmB;;;;;AACnB;AACA;AACA;;;;;AAIe,eAAe;IAC5B,MAAM,OAAO,MAAM,CAAA,GAAA,8HAAA,CAAA,gBAAa,AAAD;IAC/B,qBAAO,8OAAC,qIAAA,CAAA,UAAQ;QAAC,aAAa;;;;;;AAChC;AAIA,MAAM,WAAW,CAAA,GAAA,uLAAA,CAAA,eAAY,AAAD,uUAqB5B,eAAe;CACf,sDAAsD;CACtD,4GAA4G;CAC5G,uDAAuD;CACvD,oDAAoD;CACpD,8BAA8B;CAC9B,wDAAwD;CACxD,+EAA+E;CAC/E,0CAA0C;CAM1C,6FAA6F;CAC7F,oEAAoE;CACpE,IAAI;CAEJ,wCAAwC;CACxC,+DAA+D;CAC/D,YAAY;CACZ,qBAAqB;CACrB,uCAAuC;CACvC,4DAA4D;CAC5D,kDAAkD;CAElD,yCAAyC;CACzC,mCAAmC;CACnC,sDAAsD;CACtD,0DAA0D;CAC1D,OAAO;CACP,2CAA2C;CAC3C,sBAAsB;CACtB,yCAAyC;CACzC,+EAA+E;CAC/E,qBAAqB;CACrB,2DAA2D;CAC3D,oCAAoC;CACpC,6CAA6C;CAC7C,uCAAuC;CACvC,UAAU;CACV,2BAA2B;CAC3B,SAAS;CAET,sBAAsB;CAEtB,uCAAuC;CACvC,+FAA+F;CAC/F,sDAAsD;CACtD,6CAA6C;CAC7C,uCAAuC;CACvC,6CAA6C;CAC7C,yBAAyB;CACzB,kCAAkC;CAClC,UAAU;CACV,UAAU;CAEV,+CAA+C;CAC/C,YAAY;CAEZ,uCAAuC;CACvC,qCAAqC;CACrC,OAAO;CAEP,wDAAwD;CACxD,yBAAyB;CACzB,mCAAmC;CACnC,OAAO;CAEP,mBAAmB;CACnB,eAAe;CACf,mFAAmF;CACnF,wCAAwC;CACxC,2GAA2G;CAC3G,6DAA6D;CAC7D,iBAAiB;CACjB,eAAe;CACf,SAAS;CACT,MAAM;CAEN,aAAa;CACb,gDAAgD;CAChD,iBAAiB;CACjB,uBAAuB;CACvB,mCAAmC;CACnC,qCAAqC;CACrC,2CAA2C;CAC3C,WAAW;CAEX,kCAAkC;CAClC,+FAA+F;CAC/F,qDAAqD;CACrD,yDAAyD;CACzD,wCAAwC;CACxC,uBAAuB;CACvB,4BAA4B;CAC5B,6CAA6C;CAC7C,+CAA+C;CAC/C,eAAe;CACf,aAAa;CACb,2CAA2C;CAC3C,uBAAuB;CACvB,+BAA+B;CAC/B,6CAA6C;CAC7C,+CAA+C;CAC/C,eAAe;CACf,aAAa;CACb,6EAA6E;CAC7E,gBAAgB;CAEhB,mDAAmD;CACnD,aAAa;CACb,OAAO;CACP,IAAI","debugId":null}}]
}